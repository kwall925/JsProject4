Project 4 planning



Based on the search term, the application will render animated gifs
from http://giphy.com/.

//developers.giphy.com/dashboard/ that allows for api access
//kwall925


i) The "Search" button will search http://giphy.com based on the user-entered search term.
The goal of the search is to fetch a promise using the url
http://api.giphy.com/v1/gifs/search?q=funny cats&limit=10&api_key=your api key

  -onclick = fetch(url)then(return results)






i) Once you have retrieved the promise, then you should parse the results using JSON.
The json results should then be iterated over using the .map function
to display a list of the 10 image results that came back from the search results.


i) You cannot use a library for this project. All code must be completed using
modern javascript syntax. i.e. modern function syntax using string templating
instead of string concatenation,
(map/reduce/filter) instead of loops

<Promises/Fetch>


JS == Synchronous

AJAX == Asynchronous
    -xhr.send --> send request
    -V
    -Next line will execute while request is sent
    next line cannot depend on the request
    -Asynchronous == next line executes regardless
    of request status


onreadystatechange function == callback
    (callback executes when ready state changes)


Promises
    V
Resolve/Reject
    V
.then()
    V
.catch()


Resolve == Data is retrieved

Reject == Error has occured

.then() == Runs code after


Async...Await
    -just a different way to resolve
    promises
    -declare a function as async...
    -await will asign the eventual
    resolved value from promise


Fetch API
    fetch(url)    //default is "GET"
        V
    Response  (promise)
        V
